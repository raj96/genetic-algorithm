{"version":3,"sources":["components/Navbar.js","components/bodyContainer.js","App.js","reportWebVitals.js","index.js"],"names":["style","makeStyles","theme","console","log","navbarFooter","height","width","backgroundColor","deepOrange","navbar","NavBar","classes","AppBar","className","elevation","Toolbar","Typography","variant","InputSection","Grid","container","spacing","justify","alignItems","margin","item","xs","TextField","fullWidth","label","Button","color","ProgressSection","useState","bestDna","Card","CardHeader","title","action","CardContent","multiline","rowsMax","BodyContainer","Container","marginTop","maxWidth","Divider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAIIA,EAAQC,aAAW,SAACC,GAEtB,OADAC,QAAQC,IAAIF,GACL,CACLG,aAAc,CACZC,OAAQ,OACRC,MAAO,OACPC,gBAAiBC,IAAW,MAE9BC,OAAQ,CACNF,gBAAiBC,IAAW,UAmBnBE,MAdf,WACE,IAAMC,EAAUZ,IAChB,OACE,qCACE,cAACa,EAAA,EAAD,CAAQC,UAAWF,EAAQF,OAAQK,UAAW,EAA9C,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mCAGJ,qBAAKJ,UAAWF,EAAQP,mB,wECK9B,SAASc,IACP,OACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,QAAQ,eACRC,WAAW,SACXxB,MAAO,CAAEyB,OAAQ,mBALnB,UAOE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACf,cAACP,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,kBAE7B,cAACV,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACK,EAAA,EAAD,CAAQb,QAAQ,YAAYc,MAAM,UAAlC,sBAIF,cAACZ,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,OAKrB,SAASM,IAAmB,IAAD,EACKC,mBAAS,mBADd,mBAClBC,EADkB,UAEzB,OACE,eAACf,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASvB,MAAO,CAAEyB,OAAQ,mBAAlD,UACE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAACT,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACE,0CADF,IACoBiB,OAItB,eAACf,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACf,cAACP,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,eAACS,EAAA,EAAD,CAAMrB,UAAW,EAAjB,UACE,cAACsB,EAAA,EAAD,CACEC,MAAM,iBACNC,OAAO,6BAET,cAACC,EAAA,EAAD,UACE,cAACZ,EAAA,EAAD,CAAWC,WAAS,EAACY,WAAS,EAACC,QAAS,YAK9C,cAACtB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,UAMRgB,MAxEf,WAME,OACE,cAACC,EAAA,EAAD,CAAW5C,MALI,CACb6C,UAAW,SAI0BC,SAAS,KAAhD,SACE,cAACV,EAAA,EAAD,CAAMrB,UAAW,GAAjB,SACE,eAACyB,EAAA,EAAD,WACE,cAACrB,EAAD,IACA,cAAC4B,EAAA,EAAD,IACA,cAACd,EAAD,YCZKe,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba5bd4ff.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nlet style = makeStyles((theme) => {\r\n  console.log(theme);\r\n  return {\r\n    navbarFooter: {\r\n      height: \"25vh\",\r\n      width: \"100%\",\r\n      backgroundColor: deepOrange[900],\r\n    },\r\n    navbar: {\r\n      backgroundColor: deepOrange[900],\r\n    },\r\n  };\r\n});\r\n\r\nfunction NavBar() {\r\n  const classes = style();\r\n  return (\r\n    <>\r\n      <AppBar className={classes.navbar} elevation={0}>\r\n        <Toolbar>\r\n          <Typography variant=\"h5\">Genetic Algorithm</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.navbarFooter}></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nfunction BodyContainer() {\r\n  const style = {\r\n    rootContainer: {\r\n      marginTop: \"-15vh\",\r\n    },\r\n  };\r\n  return (\r\n    <Container style={style.rootContainer} maxWidth=\"lg\">\r\n      <Card elevation={10}>\r\n        <CardContent>\r\n          <InputSection />\r\n          <Divider />\r\n          <ProgressSection />\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction InputSection() {\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={1}\r\n      justify=\"space-evenly\"\r\n      alignItems=\"center\"\r\n      style={{ margin: \"2vh 0vh 2vh 2vh\" }}\r\n    >\r\n      <Grid item xs={3} />\r\n      <Grid item xs={4}>\r\n        <TextField fullWidth label=\"Target text\" />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction ProgressSection() {\r\n  const [bestDna, setBestDna] = useState(\"my name is raja\");\r\n  return (\r\n    <Grid container justify=\"center\" style={{ margin: \"2vh 0vh 2vh 0vh\" }}>\r\n      <Grid item>\r\n        <Typography variant=\"h4\">\r\n          <b>Best DNA:</b> {bestDna}\r\n        </Typography>\r\n      </Grid>\r\n      {/*log section*/}\r\n      <Grid container>\r\n        <Grid item xs={3} />\r\n        <Grid item xs={6}>\r\n          <Card elevation={1}>\r\n            <CardHeader\r\n              title=\"Generation Log\"\r\n              action=\"Population: 200 | Gen: 5\"\r\n            ></CardHeader>\r\n            <CardContent>\r\n              <TextField fullWidth multiline rowsMax={15} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={3} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default BodyContainer;\r\n","import \"./App.css\";\nimport NavBar from \"./components/Navbar\";\nimport BodyContainer from \"./components/bodyContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <BodyContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}